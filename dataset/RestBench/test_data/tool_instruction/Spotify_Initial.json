{
    "0": {
        "ID": 0,
        "tool_name": "GET_albums_id",
        "description": "Get Spotify catalog information for a single album.",
        "url": "http://api.spotify.com/v1/albums/{id}",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the album.\n",
                    "example": "4aawyAB9vmqN3uQ7FjRGTy",
                    "title": "Spotify Album ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            }
        ]
    },
    "1": {
        "ID": 1,
        "tool_name": "GET_albums_id_tracks",
        "description": "Get Spotify catalog information about an album\u2019s tracks.\nOptional parameters can be used to limit the number of tracks returned.",
        "url": "http://api.spotify.com/v1/albums/{id}/tracks",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the album.\n",
                    "example": "4aawyAB9vmqN3uQ7FjRGTy",
                    "title": "Spotify Album ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "2": {
        "ID": 2,
        "tool_name": "GET_artists_id",
        "description": "Get Spotify catalog information for a single artist identified by their unique Spotify ID.",
        "url": "http://api.spotify.com/v1/artists/{id}",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the artist.\n",
                    "example": "0TnOYISbd1XYRBk9myaseg",
                    "title": "Spotify Artist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "3": {
        "ID": 3,
        "tool_name": "GET_artists_id_albums",
        "description": "Get Spotify catalog information about an artist's albums.",
        "url": "http://api.spotify.com/v1/artists/{id}/albums",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the artist.\n",
                    "example": "0TnOYISbd1XYRBk9myaseg",
                    "title": "Spotify Artist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "include_groups",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of keywords that will be used to filter the response. If not supplied, all album types will be returned. <br/>\nValid values are:<br/>- `album`<br/>- `single`<br/>- `appears_on`<br/>- `compilation`<br/>For example: `include_groups=album,single`.\n",
                    "example": "single,appears_on",
                    "title": "Groups to include (single, album, appears_on, compilation)",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "4": {
        "ID": 4,
        "tool_name": "GET_artists_id_related-artists",
        "description": "Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's [listening history](http://news.spotify.com/se/2010/02/03/related-artists/).",
        "url": "http://api.spotify.com/v1/artists/{id}/related-artists",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the artist.\n",
                    "example": "0TnOYISbd1XYRBk9myaseg",
                    "title": "Spotify Artist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "5": {
        "ID": 5,
        "tool_name": "GET_artists_id_top-tracks",
        "description": "Get Spotify catalog information about an artist's top tracks by country.",
        "url": "http://api.spotify.com/v1/artists/{id}/top-tracks",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the artist.\n",
                    "example": "0TnOYISbd1XYRBk9myaseg",
                    "title": "Spotify Artist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            }
        ]
    },
    "6": {
        "ID": 6,
        "tool_name": "GET_browse_new-releases",
        "description": "Get a list of new album releases featured in Spotify (shown, for example, on a Spotify player\u2019s \u201cBrowse\u201d tab).",
        "url": "http://api.spotify.com/v1/browse/new-releases",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "country",
                "required": "false",
                "schema": {
                    "description": "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\n",
                    "example": "SE",
                    "title": "Country",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "7": {
        "ID": 7,
        "tool_name": "GET_me",
        "description": "Get detailed profile information about the current user (including the\ncurrent user's username).",
        "url": "http://api.spotify.com/v1/me",
        "required_parameters": [],
        "optional_parameters": []
    },
    "8": {
        "ID": 8,
        "tool_name": "DELETE_me_albums",
        "description": "Remove one or more albums from the current user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/albums",
        "required_parameters": [
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids) for the albums. Maximum: 20 IDs.\n",
                    "example": "382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo,2noRn2Aes5aoNVsU6iWThc",
                    "title": "Spotify Album IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "9": {
        "ID": 9,
        "tool_name": "GET_me_albums",
        "description": "Get a list of the albums saved in the current Spotify user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/albums",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            }
        ]
    },
    "10": {
        "ID": 10,
        "tool_name": "PUT_me_albums",
        "description": "Save one or more albums to the current user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/albums",
        "required_parameters": [
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids) for the albums. Maximum: 20 IDs.\n",
                    "example": "382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo,2noRn2Aes5aoNVsU6iWThc",
                    "title": "Spotify Album IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "11": {
        "ID": 11,
        "tool_name": "DELETE_me_following",
        "description": "Remove the current user as a follower of one or more artists or other Spotify users.",
        "url": "http://api.spotify.com/v1/me/following",
        "required_parameters": [
            {
                "in": "query",
                "name": "type",
                "required": "true",
                "schema": {
                    "description": "The ID type: either `artist` or `user`.\n",
                    "enum": [
                        "artist",
                        "user"
                    ],
                    "example": "artist",
                    "title": "Item Type",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the artist or the user [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids). For example: `ids=74ASZWbe4lXaubB36ztrGX,08td7MxkoHQkXnWAYD8d6Q`. A maximum of 50 IDs can be sent in one request.\n",
                    "example": "2CIMQHirSU0MQqyYHq0eOx,57dN52uHvrHOxijzpIgu3E,1vCWHaC5f2uS3yhpwWbIA6",
                    "title": "Spotify IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "12": {
        "ID": 12,
        "tool_name": "GET_me_following",
        "description": "Get the current user's followed artists.",
        "url": "http://api.spotify.com/v1/me/following",
        "required_parameters": [
            {
                "in": "query",
                "name": "type",
                "required": "true",
                "schema": {
                    "description": "The ID type: currently only `artist` is supported.\n",
                    "enum": [
                        "artist"
                    ],
                    "example": "artist",
                    "title": "Item Type",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "after",
                "required": "false",
                "schema": {
                    "description": "The last artist ID retrieved from the previous request.\n",
                    "example": "0I2XqVXqHScXjHhk6AYYRe",
                    "title": "After",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20\\. Minimum: 1\\. Maximum: 50\\.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            }
        ]
    },
    "13": {
        "ID": 13,
        "tool_name": "PUT_me_following",
        "description": "Add the current user as a follower of one or more artists or other Spotify users.",
        "url": "http://api.spotify.com/v1/me/following",
        "required_parameters": [
            {
                "in": "query",
                "name": "type",
                "required": "true",
                "schema": {
                    "description": "The ID type.\n",
                    "enum": [
                        "artist",
                        "user"
                    ],
                    "example": "artist",
                    "title": "Item Type",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the artist or the user [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids).\nA maximum of 50 IDs can be sent in one request.\n",
                    "example": "2CIMQHirSU0MQqyYHq0eOx,57dN52uHvrHOxijzpIgu3E,1vCWHaC5f2uS3yhpwWbIA6",
                    "title": "Spotify IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "14": {
        "ID": 14,
        "tool_name": "GET_me_player",
        "description": "Get information about the user\u2019s current playback state, including track or episode, progress, and active device.",
        "url": "http://api.spotify.com/v1/me/player",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "additional_types",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of item types that your client supports besides the default `track` type. Valid types are: `track` and `episode`.<br/>\n_**Note**: This parameter was introduced to allow existing clients to maintain their current behaviour and might be deprecated in the future._<br/>\nIn addition to providing this parameter, make sure that your client properly handles cases of new types in the future by checking against the `type` field of each object.\n",
                    "title": "Additional Types",
                    "type": "string"
                }
            }
        ]
    },
    "15": {
        "ID": 15,
        "tool_name": "GET_me_player_currently-playing",
        "description": "Get the track currently being played on the user's Spotify account.",
        "url": "http://api.spotify.com/v1/me/player/currently-playing",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "additional_types",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of item types that your client supports besides the default `track` type. Valid types are: `track` and `episode`.<br/>\n_**Note**: This parameter was introduced to allow existing clients to maintain their current behaviour and might be deprecated in the future._<br/>\nIn addition to providing this parameter, make sure that your client properly handles cases of new types in the future by checking against the `type` field of each object.\n",
                    "title": "Additional Types",
                    "type": "string"
                }
            }
        ]
    },
    "16": {
        "ID": 16,
        "tool_name": "GET_me_player_devices",
        "description": "Get information about a user\u2019s available devices.",
        "url": "http://api.spotify.com/v1/me/player/devices",
        "required_parameters": [],
        "optional_parameters": []
    },
    "17": {
        "ID": 17,
        "tool_name": "POST_me_player_next",
        "description": "Skips to next track in the user\u2019s queue.",
        "url": "http://api.spotify.com/v1/me/player/next",
        "required_parameters": [],
        "optional_parameters": []
    },
    "18": {
        "ID": 18,
        "tool_name": "PUT_me_player_pause",
        "description": "Pause playback on the user's account.",
        "url": "http://api.spotify.com/v1/me/player/pause",
        "required_parameters": [],
        "optional_parameters": []
    },
    "19": {
        "ID": 19,
        "tool_name": "PUT_me_player_play",
        "description": "Start a new context or resume current playback on the user's active device.",
        "url": "http://api.spotify.com/v1/me/player/play",
        "required_parameters": [],
        "optional_parameters": []
    },
    "20": {
        "ID": 20,
        "tool_name": "POST_me_player_previous",
        "description": "Skips to previous track in the user\u2019s queue.",
        "url": "http://api.spotify.com/v1/me/player/previous",
        "required_parameters": [],
        "optional_parameters": []
    },
    "21": {
        "ID": 21,
        "tool_name": "GET_me_player_queue",
        "description": "Get the list of objects that make up the user's queue.",
        "url": "http://api.spotify.com/v1/me/player/queue",
        "required_parameters": [],
        "optional_parameters": []
    },
    "22": {
        "ID": 22,
        "tool_name": "POST_me_player_queue",
        "description": "Add an item to the end of the user's current playback queue.",
        "url": "http://api.spotify.com/v1/me/player/queue",
        "required_parameters": [
            {
                "in": "query",
                "name": "uri",
                "required": "true",
                "schema": {
                    "description": "The uri of the item to add to the queue. Must be a track or an episode uri.\n",
                    "example": "spotify:track:4iV5W9uYEdYUVa79Axb7Rh",
                    "title": "Spotify URI",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "device_id",
                "required": "false",
                "schema": {
                    "description": "The id of the device this command is targeting. If\nnot supplied, the user's currently active device is the target.\n",
                    "example": "0d1841b0976bae2a3a310dd74c0f3df354899bc8",
                    "title": "Device ID",
                    "type": "string"
                }
            }
        ]
    },
    "23": {
        "ID": 23,
        "tool_name": "GET_me_player_recently-played",
        "description": "Get tracks from the current user's recently played tracks.\n_**Note**: Currently doesn't support podcast episodes._",
        "url": "http://api.spotify.com/v1/me/player/recently-played",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "after",
                "required": "false",
                "schema": {
                    "description": "A Unix timestamp in milliseconds. Returns all items\nafter (but not including) this cursor position. If `after` is specified, `before`\nmust not be specified.\n",
                    "example": "1484811043508",
                    "title": "After",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "before",
                "required": "false",
                "schema": {
                    "description": "A Unix timestamp in milliseconds. Returns all items\nbefore (but not including) this cursor position. If `before` is specified,\n`after` must not be specified.\n",
                    "title": "Before",
                    "type": "integer"
                }
            }
        ]
    },
    "24": {
        "ID": 24,
        "tool_name": "PUT_me_player_repeat",
        "description": "Set the repeat mode for the user's playback. Options are repeat-track,\nrepeat-context, and off.",
        "url": "http://api.spotify.com/v1/me/player/repeat",
        "required_parameters": [
            {
                "in": "query",
                "name": "state",
                "required": "true",
                "schema": {
                    "description": "**track**, **context** or **off**.<br/>\n**track** will repeat the current track.<br/>\n**context** will repeat the current context.<br/>\n**off** will turn repeat off.\n",
                    "example": "context",
                    "title": "State",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "25": {
        "ID": 25,
        "tool_name": "PUT_me_player_volume",
        "description": "Set the volume for the user\u2019s current playback device.",
        "url": "http://api.spotify.com/v1/me/player/volume",
        "required_parameters": [
            {
                "in": "query",
                "name": "volume_percent",
                "required": "true",
                "schema": {
                    "description": "The volume to set. Must be a value from 0 to 100 inclusive.\n",
                    "example": "50",
                    "title": "Volume %",
                    "type": "integer"
                }
            }
        ],
        "optional_parameters": []
    },
    "26": {
        "ID": 26,
        "tool_name": "GET_me_playlists",
        "description": "Get a list of the playlists owned or followed by the current Spotify\nuser.",
        "url": "http://api.spotify.com/v1/me/playlists",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "'The index of the first playlist to return. Default:\n0 (the first object). Maximum offset: 100.000\\. Use with `limit` to get the\nnext set of playlists.'\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "27": {
        "ID": 27,
        "tool_name": "GET_me_top_type",
        "description": "Get the current user's top artists or tracks based on calculated affinity.",
        "url": "http://api.spotify.com/v1/me/top/{type}",
        "required_parameters": [
            {
                "in": "path",
                "name": "type",
                "required": "true",
                "schema": {
                    "description": "The type of entity to return. Valid values: `artists` or `tracks`\n",
                    "enum": [
                        "artists",
                        "tracks"
                    ],
                    "title": "Type",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "time_range",
                "required": "false",
                "schema": {
                    "default": "medium_term",
                    "description": "Over what time frame the affinities are computed. Valid values: `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), `short_term` (approximately last 4 weeks). Default: `medium_term`\n",
                    "example": "medium_term",
                    "title": "Time Range",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "28": {
        "ID": 28,
        "tool_name": "DELETE_me_tracks",
        "description": "Remove one or more tracks from the current user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/tracks",
        "required_parameters": [
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids). For example: `ids=4iV5W9uYEdYUVa79Axb7Rh,1301WleyT98MSxVHPZCA6M`. Maximum: 50 IDs.\n",
                    "example": "7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B",
                    "title": "Spotify Track IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "29": {
        "ID": 29,
        "tool_name": "GET_me_tracks",
        "description": "Get a list of the songs saved in the current Spotify user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/tracks",
        "required_parameters": [],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            }
        ]
    },
    "30": {
        "ID": 30,
        "tool_name": "PUT_me_tracks",
        "description": "Save one or more tracks to the current user's 'Your Music' library.",
        "url": "http://api.spotify.com/v1/me/tracks",
        "required_parameters": [
            {
                "in": "query",
                "name": "ids",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of the [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids). For example: `ids=4iV5W9uYEdYUVa79Axb7Rh,1301WleyT98MSxVHPZCA6M`. Maximum: 50 IDs.\n",
                    "example": "7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B",
                    "title": "Spotify Track IDs",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "31": {
        "ID": 31,
        "tool_name": "GET_playlists_playlist_id",
        "description": "Get a playlist owned by a Spotify user.",
        "url": "http://api.spotify.com/v1/playlists/{playlist_id}",
        "required_parameters": [
            {
                "in": "path",
                "name": "playlist_id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the playlist.\n",
                    "example": "3cEYpjA9oz9GiPac4AsH4n",
                    "title": "Playlist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "fields",
                "required": "false",
                "schema": {
                    "description": "Filters for the query: a comma-separated list of the\nfields to return. If omitted, all fields are returned. For example, to get\njust the playlist''s description and URI: `fields=description,uri`. A dot\nseparator can be used to specify non-reoccurring fields, while parentheses\ncan be used to specify reoccurring fields within objects. For example, to\nget just the added date and user ID of the adder: `fields=tracks.items(added_at,added_by.id)`.\nUse multiple parentheses to drill down into nested objects, for example: `fields=tracks.items(track(name,href,album(name,href)))`.\nFields can be excluded by prefixing them with an exclamation mark, for example:\n`fields=tracks.items(track(name,href,album(!name,href)))`\n",
                    "example": "items(added_by.id,track(name,href,album(name,href)))",
                    "title": "Fields",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "additional_types",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of item types that your client supports besides the default `track` type. Valid types are: `track` and `episode`.<br/>\n_**Note**: This parameter was introduced to allow existing clients to maintain their current behaviour and might be deprecated in the future._<br/>\nIn addition to providing this parameter, make sure that your client properly handles cases of new types in the future by checking against the `type` field of each object.\n",
                    "title": "Additional Types",
                    "type": "string"
                }
            }
        ]
    },
    "32": {
        "ID": 32,
        "tool_name": "PUT_playlists_playlist_id",
        "description": "Change a playlist's name and public/private state. (The user must, of\ncourse, own the playlist.)",
        "url": "http://api.spotify.com/v1/playlists/{playlist_id}",
        "required_parameters": [
            {
                "in": "path",
                "name": "playlist_id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the playlist.\n",
                    "example": "3cEYpjA9oz9GiPac4AsH4n",
                    "title": "Playlist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "33": {
        "ID": 33,
        "tool_name": "DELETE_playlists_playlist_id_tracks",
        "description": "Remove one or more items from a user's playlist.",
        "url": "http://api.spotify.com/v1/playlists/{playlist_id}/tracks",
        "required_parameters": [
            {
                "in": "path",
                "name": "playlist_id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the playlist.\n",
                    "example": "3cEYpjA9oz9GiPac4AsH4n",
                    "title": "Playlist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    },
    "34": {
        "ID": 34,
        "tool_name": "GET_playlists_playlist_id_tracks",
        "description": "Get full details of the items of a playlist owned by a Spotify user.",
        "url": "http://api.spotify.com/v1/playlists/{playlist_id}/tracks",
        "required_parameters": [
            {
                "in": "path",
                "name": "playlist_id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the playlist.\n",
                    "example": "3cEYpjA9oz9GiPac4AsH4n",
                    "title": "Playlist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "fields",
                "required": "false",
                "schema": {
                    "description": "Filters for the query: a comma-separated list of the\nfields to return. If omitted, all fields are returned. For example, to get\njust the total number of items and the request limit:<br/>`fields=total,limit`<br/>A\ndot separator can be used to specify non-reoccurring fields, while parentheses\ncan be used to specify reoccurring fields within objects. For example, to\nget just the added date and user ID of the adder:<br/>`fields=items(added_at,added_by.id)`<br/>Use\nmultiple parentheses to drill down into nested objects, for example:<br/>`fields=items(track(name,href,album(name,href)))`<br/>Fields\ncan be excluded by prefixing them with an exclamation mark, for example:<br/>`fields=items.track.album(!external_urls,images)`\n",
                    "example": "items(added_by.id,track(name,href,album(name,href)))",
                    "title": "Fields",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items.\n",
                    "example": "5",
                    "title": "Offset",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "additional_types",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of item types that your client supports besides the default `track` type. Valid types are: `track` and `episode`.<br/>\n_**Note**: This parameter was introduced to allow existing clients to maintain their current behaviour and might be deprecated in the future._<br/>\nIn addition to providing this parameter, make sure that your client properly handles cases of new types in the future by checking against the `type` field of each object.\n",
                    "title": "Additional Types",
                    "type": "string"
                }
            }
        ]
    },
    "35": {
        "ID": 35,
        "tool_name": "POST_playlists_playlist_id_tracks",
        "description": "Add one or more items to a user's playlist.",
        "url": "http://api.spotify.com/v1/playlists/{playlist_id}/tracks",
        "required_parameters": [
            {
                "in": "path",
                "name": "playlist_id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids) of the playlist.\n",
                    "example": "3cEYpjA9oz9GiPac4AsH4n",
                    "title": "Playlist ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "position",
                "required": "false",
                "schema": {
                    "description": "The position to insert the items, a zero-based index. For example, to insert the items in the first position: `position=0`; to insert the items in the third position: `position=2`. If omitted, the items will be appended to the playlist. Items are added in the order they are listed in the query string or request body.\n",
                    "example": "0",
                    "title": "Position (append by default)",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "uris",
                "required": "false",
                "schema": {
                    "description": "A comma-separated list of [Spotify URIs](/documentation/web-api/#spotify-uris-and-ids) to add, can be track or episode URIs. For example:<br/>`uris=spotify:track:4iV5W9uYEdYUVa79Axb7Rh, spotify:track:1301WleyT98MSxVHPZCA6M, spotify:episode:512ojhOuo1ktJprKbVcKyQ`<br/>A maximum of 100 items can be added in one request. <br/>\n_**Note**: it is likely that passing a large number of item URIs as a query parameter will exceed the maximum length of the request URI. When adding a large number of items, it is recommended to pass them in the request body, see below._\n",
                    "example": "spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:track:1301WleyT98MSxVHPZCA6M",
                    "title": "Spotify Track URIs",
                    "type": "string"
                }
            }
        ]
    },
    "36": {
        "ID": 36,
        "tool_name": "GET_recommendations",
        "description": "Recommendations are generated based on the available information for a given seed entity and matched against similar artists and tracks. If there is sufficient information about the provided seeds, a list of tracks will be returned together with pool size details.\n\nFor artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.",
        "url": "http://api.spotify.com/v1/recommendations",
        "required_parameters": [
            {
                "in": "query",
                "name": "seed_artists",
                "required": "true",
                "schema": {
                    "description": "A comma separated list of [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids) for seed artists.  Up to 5 seed values may be provided in any combination of `seed_artists`, `seed_tracks` and `seed_genres`.\n",
                    "example": "4NHQUGzhtTLFvgF5SZesLK",
                    "title": "Spotify Artist ID Seeds",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "seed_genres",
                "required": "true",
                "schema": {
                    "description": "A comma separated list of any genres in the set of [available genre seeds](#available-genre-seeds).  Up to 5 seed values may be provided in any combination of `seed_artists`, `seed_tracks` and `seed_genres`.\n",
                    "example": "classical,country",
                    "title": "Genres Seeds",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "seed_tracks",
                "required": "true",
                "schema": {
                    "description": "A comma separated list of [Spotify IDs](/documentation/web-api/#spotify-uris-and-ids) for a seed track.  Up to 5 seed values may be provided in any combination of `seed_artists`, `seed_tracks` and `seed_genres`.\n",
                    "example": "0c6xIDDpzE81m2q797ordA",
                    "title": "Spotify Track ID Seeds",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The target size of the list of recommended tracks. For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks. Debugging information for such cases is available in the response. Default: 20\\. Minimum: 1\\. Maximum: 100.\n",
                    "example": "10",
                    "maximum": "100",
                    "minimum": "1",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            }
        ]
    },
    "37": {
        "ID": 37,
        "tool_name": "GET_search",
        "description": "Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks\nthat match a keyword string.<br />\n**Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**",
        "url": "http://api.spotify.com/v1/search",
        "required_parameters": [
            {
                "in": "query",
                "name": "q",
                "required": "true",
                "schema": {
                    "description": "Your search query.\n\nYou can narrow down your search using field filters. The available filters are `album`, `artist`, `track`, `year`, `upc`, `tag:hipster`, `tag:new`, `isrc`, and `genre`. Each field filter only applies to certain result types.\n\nThe `artist` and `year` filters can be used while searching albums, artists and tracks. You can filter on a single `year` or a range (e.g. 1955-1960).<br />\nThe `album` filter can be used while searching albums and tracks.<br />\nThe `genre` filter can be used while searching artists and tracks.<br />\nThe `isrc` and `track` filters can be used while searching tracks.<br />\nThe `upc`, `tag:new` and `tag:hipster` filters can only be used while searching albums. The `tag:new` filter will return albums released in the past two weeks and `tag:hipster` can be used to return only albums with the lowest 10% popularity.<br />\n",
                    "example": "remaster%20track:Doxy%20artist:Miles%20Davis",
                    "title": "Query",
                    "type": "string"
                }
            },
            {
                "explode": "false",
                "in": "query",
                "name": "type",
                "required": "true",
                "schema": {
                    "description": "A comma-separated list of item types to search across. Search results include hits\nfrom all the specified item types. For example: `q=abacab&type=album,track` returns\nboth albums and tracks matching \"abacab\".\n",
                    "items": {
                        "enum": [
                            "album",
                            "artist",
                            "playlist",
                            "track",
                            "show",
                            "episode",
                            "audiobook"
                        ],
                        "type": "string"
                    },
                    "title": "Item type",
                    "type": "array"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            },
            {
                "in": "query",
                "name": "limit",
                "required": "false",
                "schema": {
                    "default": "20",
                    "description": "The maximum number of results to return in each item type.\n",
                    "example": "10",
                    "maximum": "50",
                    "minimum": "0",
                    "title": "Limit",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "offset",
                "required": "false",
                "schema": {
                    "default": "0",
                    "description": "The index of the first result to return. Use\nwith limit to get the next page of search results.\n",
                    "example": "5",
                    "maximum": "1000",
                    "minimum": "0",
                    "title": "Offset",
                    "type": "integer"
                }
            },
            {
                "in": "query",
                "name": "include_external",
                "required": "false",
                "schema": {
                    "description": "If `include_external=audio` is specified it signals that the client can play externally hosted audio content, and marks\nthe content as playable in the response. By default externally hosted audio content is marked as unplayable in the response.\n",
                    "enum": [
                        "audio"
                    ],
                    "title": "Include External",
                    "type": "string"
                }
            }
        ]
    },
    "38": {
        "ID": 38,
        "tool_name": "GET_tracks_id",
        "description": "Get Spotify catalog information for a single track identified by its\nunique Spotify ID.",
        "url": "http://api.spotify.com/v1/tracks/{id}",
        "required_parameters": [
            {
                "in": "path",
                "name": "id",
                "required": "true",
                "schema": {
                    "description": "The [Spotify ID](/documentation/web-api/#spotify-uris-and-ids)\nfor the track.\n",
                    "example": "11dFghVXANMlKmJXsNCbNl",
                    "title": "Spotify Track ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": [
            {
                "in": "query",
                "name": "market",
                "required": "false",
                "schema": {
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n  If a country code is specified, only content that is available in that market will be returned.<br/>\n  If a valid user access token is specified in the request header, the country associated with\n  the user account will take priority over this parameter.<br/>\n  _**Note**: If neither market or user country are provided, the content is considered unavailable for the client._<br/>\n  Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).\n",
                    "example": "ES",
                    "title": "Market",
                    "type": "string"
                }
            }
        ]
    },
    "39": {
        "ID": 39,
        "tool_name": "POST_users_user_id_playlists",
        "description": "Create a playlist for a Spotify user (Before calling this API, must call GET /me first to get the user_id). (The playlist will be empty until\nyou [add tracks](/documentation/web-api/reference/#/operations/add-tracks-to-playlist).)",
        "url": "http://api.spotify.com/v1/users/{user_id}/playlists",
        "required_parameters": [
            {
                "in": "path",
                "name": "user_id",
                "required": "true",
                "schema": {
                    "description": "The user's [Spotify user ID](/documentation/web-api/#spotify-uris-and-ids).\n",
                    "example": "smedjan",
                    "title": "User ID",
                    "type": "string"
                }
            }
        ],
        "optional_parameters": []
    }
}
