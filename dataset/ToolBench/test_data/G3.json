[
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm organizing a film festival and I need assistance in finding the best films. Can you search for videos related to 'documentary' on Vimeo? Additionally, fetch the related people in the 'cinema' category to invite them as guest speakers. Finally, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 455,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a film enthusiast and I want to explore new genres. Can you search for videos related to 'horror' on Vimeo? Additionally, fetch the related people in the 'entertainment' category to discover new talents. Finally, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 456,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm hosting a virtual movie night with my friends and I need some suggestions. Can you search for videos related to 'action' on Vimeo? Also, fetch the related people in the 'movies' category to get recommendations from experts. Lastly, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 457,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm planning a family movie marathon and I need a variety of films. Can you search for videos related to 'animation' on Vimeo? Also, fetch the related people in the 'animation' category to get insights from professionals. Lastly, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 459,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm organizing a film festival and I'm looking for award-winning films. Can you search for videos related to 'award-winning' on Vimeo? Additionally, fetch the related people in the 'film festival' category to invite them as judges. Finally, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 460,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a charity event and I need to promote it on social media. Can you generate short URLs for the event details using the bitly tool? Additionally, I want to create branded short links for the event website using the URL Link Shortener tool.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ]
        ],
        "query_id": 1983,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a small business owner and I want to enhance my online presence. Can you provide me with a list of available domains from the URL Link Shortener tool? I also need help creating short, catchy URLs for my website using the bitly tool.",
        "relevant APIs": [
            [
                "URL Link Shortener",
                "Get a list of domains"
            ],
            [
                "bitly",
                "shorten"
            ]
        ],
        "query_id": 1984,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a road trip with my family and I want to share our itinerary with friends. Can you generate short URLs for each destination using the bitly tool? Additionally, I need a list of available domains from the URL Link Shortener tool to choose the perfect domain for the trip.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 1985,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a travel blogger and I want to share my latest blog post on social media. Can you help me create short URLs for the blog post using the bitly tool? I also need to create branded short links for my website using the URL Link Shortener tool.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ]
        ],
        "query_id": 1986,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a developer and I'm working on a project that requires URL shortening functionality. Can you provide me with a list of available domains from the URL Link Shortener tool? I also need help creating short URLs for my project using the bitly tool.",
        "relevant APIs": [
            [
                "URL Link Shortener",
                "Get a list of domains"
            ],
            [
                "bitly",
                "shorten"
            ]
        ],
        "query_id": 1989,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a social media influencer and I want to track the engagement of my posts. Can you help me create short URLs for each post using the bitly tool? I also need to create branded short links for my website using the URL Link Shortener tool.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ]
        ],
        "query_id": 1991,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Genres",
                "api_description": "Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Sources",
                "api_description": "Get a listing of titles that have changed to their streaming sources within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass in the 2 character region code (eg US) for the country you want to get titles with changed sources from. There is a limit to 1 region on this endpoint, if you leave this field blank US changes will be returned only.",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            }
        ],
        "query": "I'm organizing a movie trivia night for my family. Can you give me the genre names and IDs for movies? Also, provide me with the basic information about a specific cast member, including their name, profession, birth and death years, and best titles.",
        "relevant APIs": [
            [
                "Watchmode",
                "Genres"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 3322,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Genres",
                "api_description": "Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Sources",
                "api_description": "Get a listing of titles that have changed to their streaming sources within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass in the 2 character region code (eg US) for the country you want to get titles with changed sources from. There is a limit to 1 region on this endpoint, if you leave this field blank US changes will be returned only.",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            }
        ],
        "query": "I want to explore different genres of movies. Fetch the genre names and IDs for me. Also, provide me with the basic information about a specific cast member, including their name, profession, birth and death years, and best titles.",
        "relevant APIs": [
            [
                "Watchmode",
                "Genres"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 3323,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a film student and I'm working on a documentary about climate change. Can you assist me in finding videos related to 'Climate Change' on Vimeo? Additionally, provide me with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4279,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm planning a surprise birthday party for my sister and I want to create a slideshow with her childhood photos. Can you suggest some videos from the 'Family' category on Vimeo? Also, provide me with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4280,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm planning a road trip with my family and we want to document our journey. Can you suggest some popular videos from the 'Travel' category on Vimeo? Also, provide us with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4282,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a fitness enthusiast and I'm looking for workout videos to follow at home. Can you help me find videos from the 'Fitness' category on Vimeo? Additionally, provide me with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4283,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a music producer and I'm looking for music videos to get inspiration for my next project. Can you help me find videos from the 'Music' category on Vimeo? Additionally, provide me with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4285,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedVideos",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm planning a romantic date night with my partner and I want to watch some romantic videos. Can you suggest some videos from the 'Romance' category on Vimeo? Also, provide me with information on how to download and stream these videos using the YTStream - Download YouTube Videos tool.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetRelatedVideos"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 4286,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            }
        ],
        "query": "I'm hosting a company movie night and we want to watch a sci-fi movie. Can you suggest a popular sci-fi movie available for streaming in the US? Also, provide the streaming sources for the movie 'Inception'.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ]
        ],
        "query_id": 5863,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            }
        ],
        "query": "I want to watch a classic movie with my family. Can you suggest a popular classic movie available for streaming in the US? Also, provide the streaming sources for the movie 'Casablanca'.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ]
        ],
        "query_id": 5864,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            }
        ],
        "query": "I want to watch a documentary about nature. Can you suggest a popular nature documentary available for streaming in the US? Also, provide the streaming sources for the documentary 'Planet Earth'.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ]
        ],
        "query_id": 5865,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Networks",
                "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "origin_country": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Basic (FREE)",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
                        "default": "18"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm planning a movie night with my friends this weekend. Can you recommend some new titles that have been added to streaming platforms recently? Also, provide me with the basic details and streaming availability of the movie with IMDb ID tt9904802.",
        "relevant APIs": [
            [
                "Watchmode",
                "New Titles"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ]
        ],
        "query_id": 8031,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Networks",
                "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "origin_country": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Basic (FREE)",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
                        "default": "18"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I want to explore different genres of movies and series available on streaming platforms. Can you provide me with the basic details and streaming availability of a movie or series with the keyword 'zombie' and released between the years 2000 and 2025? Also, fetch the details of the actors and crew associated with the title with Watchmode ID 3173903.",
        "relevant APIs": [
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Watchmode",
                "Title Cast & Crew"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ]
        ],
        "query_id": 8032,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Networks",
                "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "origin_country": "str",
                    "tmdb_id": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Basic (FREE)",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
                        "default": "18"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm a film critic and I need to gather information about a specific movie. Can you provide me with the basic details and streaming availability of the movie with IMDb ID tt1877830? Additionally, fetch the details of the actors and crew associated with the movie.",
        "relevant APIs": [
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Watchmode",
                "Title Cast & Crew"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ]
        ],
        "query_id": 8034,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a weekend getaway with my family and we want to watch some movies during our trip. Can you recommend some popular movies that are available for streaming in Australia? Also, provide us with the streaming sources where we can watch these movies.",
        "relevant APIs": [
            [
                "Watchmode",
                "Autocomplete Search"
            ],
            [
                "Watchmode",
                "Sources"
            ],
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ]
        ],
        "query_id": 8334,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie night for my company's employees and I need some suggestions for inspirational movies. Can you recommend some popular inspirational movies that are available for streaming in the US? Also, provide me with the streaming sources where I can watch these movies.",
        "relevant APIs": [
            [
                "Watchmode",
                "Autocomplete Search"
            ],
            [
                "Watchmode",
                "Sources"
            ],
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ]
        ],
        "query_id": 8335,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm hosting a movie-themed party for my friends and I need some ideas for classic movies to watch. Can you recommend some popular classic movies that are available for streaming in the US? Also, provide me with the streaming sources where I can watch these movies.",
        "relevant APIs": [
            [
                "Watchmode",
                "Autocomplete Search"
            ],
            [
                "Watchmode",
                "Sources"
            ],
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ]
        ],
        "query_id": 8337,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a virtual conference and I need to find some high-quality videos to include in the presentations. Can you help me search for relevant videos on Vimeo? Once I find the videos, I would like to download them for offline viewing. Please provide me with the download links for these videos. Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9332,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a filmmaker and I'm looking for inspiration for my next project. Can you recommend some popular videos from Vimeo that have won awards or received critical acclaim? Once I find the videos, I would like to download them for reference. Please provide me with the download links for these videos. Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllCategories"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9335,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a virtual art exhibition and I need some videos to showcase the artists' works. Can you help me search for videos on Vimeo that feature different art forms like painting, sculpture, and photography? Once I find the videos, I would like to download them for offline viewing. Please provide me with the download links for these videos. Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9336,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a charity event and I want to create a promotional video to raise awareness. Can you assist me in finding videos from Vimeo that highlight successful charity campaigns? Once I find the videos, I would like to download them for reference. Please provide me with the download links for these videos. Your help is greatly appreciated!",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9337,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a travel vlog and I need some stunning videos to include in my videos. Can you help me search for travel videos on Vimeo? Once I find the videos, I would like to download them for editing. Please provide me with the download links for these videos. Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9339,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "SearchVideos",
                "api_description": "Search for videos.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search terms",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information.",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a film student and I'm looking for unique and experimental videos to study for my thesis. Can you recommend some avant-garde videos from Vimeo that push the boundaries of traditional filmmaking? Once I find the videos, I would like to download them for analysis. Please provide me with the download links for these videos. Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllCategories"
            ],
            [
                "Vimeo",
                "SearchVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9340,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm planning a movie night with my friends and I need some recommendations. Get me the category info for 'comedy', the channel info for 'Paramount Pictures', and the comments for the video with ID '123456'. Also, find a website where I can stream or download the movie with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9341,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a filmmaker working on a documentary and I need some information. Get me the category info for 'documentaries', the channel info for 'National Geographic', and the comments for the video with ID '345678'. Also, find a website where I can stream or download a documentary with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9343,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I want to learn more about wildlife photography. Provide me with the category info for 'photography', the channel info for 'National Geographic', and the comments for the video with ID '901234'. Also, find a website where I can stream or download a tutorial video on wildlife photography with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9344,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm searching for inspiration for my next painting. Can you get me the category info for 'art', the channel info for 'Museum of Modern Art', and the comments for the video with ID '567890'? Also, find a website where I can stream or download a video on famous paintings with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9345,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm hosting a virtual book club and I need some recommendations. Provide me with the category info for 'books', the channel info for 'Book Riot', and the comments for the video with ID '234567'. Also, find a website where I can stream or download the audiobook with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9346,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetVideosComment",
                "api_description": "Get a list of the comments on a video.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/php/xml",
                        "default": ""
                    },
                    {
                        "name": "video_id",
                        "type": "STRING",
                        "description": "The ID of the video.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I want to create a playlist for my workout sessions. Get me the category info for 'music', the channel info for 'Spotify', and the comments for the video with ID '012345'. Also, find a website where I can stream or download a workout music mix with the ID 'UxxajLWwzqY'.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelInfo"
            ],
            [
                "Vimeo",
                "GetVideosComment"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 9349,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm trying to find a specific movie or TV show, but I can't remember the exact title. Can you help me search for it based on a keyword? Also, provide me with the list of titles that match my search criteria.",
        "relevant APIs": [
            [
                "OTT details",
                "Search"
            ],
            [
                "Watchmode",
                "List Titles"
            ]
        ],
        "query_id": 10898,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to plan a surprise party for my best friend's birthday. Can you help me create a short URL for the party invitation? Also, suggest some unique and catchy slashtags for the party event. Furthermore, provide me with a list of available domains to choose from for the short URL.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11644,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a road trip with my friends and we want to share the itinerary details. Can you help us create a short URL for the trip plan? Also, suggest some domain options for the trip link. Furthermore, provide me with a list of available domains for branding the short link.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11645,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise anniversary party for my parents. Can you help me create a short URL for the party invitation? Also, suggest some unique and memorable slashtags for the event. Furthermore, provide me with a list of available domains to choose from for the short URL.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11646,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to share a news article with my colleagues. Can you help me create a short URL for the article? Also, suggest some catchy slashtags for the news. Furthermore, provide me with a list of available domains to choose from for the short URL.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11647,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise baby shower for my best friend. Can you generate a short URL for the baby shower invitation? Also, suggest some adorable and creative slashtags for the event. Furthermore, provide me with a list of available domains to choose from for the short URL.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11648,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a team building activity for my company. Can you help me create a short URL for the event details? Also, suggest some domain options for the team building link. Furthermore, provide me with a list of available domains for branding the short link.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11649,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise graduation party for my sister. Can you generate a short URL for the party invitation? Also, suggest some fun and unique slashtags for the event. Furthermore, provide me with a list of available domains to choose from for the short URL.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 11650,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a student working on a research project about contemporary art. Can you help me find channels on Vimeo that feature interviews with renowned artists and showcase their artworks? Additionally, I would like to download and stream a specific video about a famous painting.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllChannels"
            ],
            [
                "Vimeo",
                "GetAllCategories"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ],
            [
                "Vimeo",
                "GetAllChannels"
            ]
        ],
        "query_id": 12094,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllCategories",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a food blogger and I want to create engaging content for my audience. Can you provide me with a list of popular channels on Vimeo that focus on cooking and share unique recipes? Additionally, I would like to download and stream a video that showcases a delicious dessert recipe.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllChannels"
            ],
            [
                "Vimeo",
                "GetAllCategories"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ],
            [
                "Vimeo",
                "GetAllChannels"
            ]
        ],
        "query_id": 12095,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New People",
                "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie marathon for my company's team-building event. Could you suggest some action movies from the 90s that are available for streaming on Netflix, Prime Video, and Hulu? Please include the IMDb ratings and streaming links for each movie.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "OTT details",
                "Advanced Search"
            ],
            [
                "Streaming Availability",
                "Search Ultra"
            ]
        ],
        "query_id": 13441,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New People",
                "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm planning a movie night with my family and we want to watch some animated movies. Can you recommend some animated movies suitable for kids and adults that are available for streaming on Netflix and Prime Video? Please provide the IMDb ratings and streaming links for each movie.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "OTT details",
                "Advanced Search"
            ],
            [
                "Streaming Availability",
                "Search Ultra"
            ]
        ],
        "query_id": 13443,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New People",
                "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            }
        ],
        "query": "I'm organizing a movie trivia night for my friends and I need some interesting movie facts. Can you provide me with random facts about movies and actors? Also, suggest some popular movies from the 90s that are available for streaming on Netflix and Prime Video.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "Watchmode",
                "New People"
            ],
            [
                "Streaming Availability",
                "Search Pro"
            ]
        ],
        "query_id": 13444,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm a huge fan of Leonardo DiCaprio and I want to know more about his career. Can you give me the basic information, including the birth year and known titles, of Leonardo DiCaprio? Also, provide me with the streaming sources for the movie 'The Wolf of Wall Street' and the latest arrivals on different platforms in the US.",
        "relevant APIs": [
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "New Arrivals"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ]
        ],
        "query_id": 13773,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm organizing a movie marathon for my family and I need a list of family-friendly movies available on streaming platforms in the US. Can you provide me with the streaming sources for the movie 'Toy Story' and the basic information about the cast, including their names and professions? Also, give me the latest arrivals on different platforms in the US.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "New Arrivals"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 13774,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm a film critic and I need to gather information about the latest releases. Can you provide me with the list of recently released movies and TV shows available on streaming platforms in the US? Additionally, give me the streaming availability details for the show 'Breaking Bad' and the basic information about the cast, including their names and professions.",
        "relevant APIs": [
            [
                "Watchmode",
                "Streaming Release Dates"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "New Arrivals"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 13776,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm a movie enthusiast and I want to explore different genres. Can you help me find a list of titles in the horror and comedy genres available on streaming platforms in the US? Also, provide me with the streaming sources for the movie 'Get Out' and the basic information about the cast, including their names and professions.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Streaming Availability",
                "Get Ultra"
            ]
        ],
        "query_id": 13777,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I'm a screenwriter looking for inspiration for my next project. Can you help me find a list of critically acclaimed movies available on streaming platforms in the US? Also, provide me with the streaming sources for the movie 'Citizen Kane' and the basic information about the cast, including their names and professions.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Streaming Availability",
                "Get Basic (FREE)"
            ]
        ],
        "query_id": 13779,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "List Titles",
                "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
                        "default": "4,9"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "250"
                    },
                    {
                        "name": "source_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "23,206"
                    },
                    {
                        "name": "source_types",
                        "type": "STRING",
                        "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
                        "default": "sub,free"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
                        "default": "US"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
                        "default": "relevance_desc"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "network_ids",
                        "type": "STRING",
                        "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
                        "default": "1,8,12"
                    },
                    {
                        "name": "release_date_start",
                        "type": "NUMBER",
                        "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
                        "default": "20010101"
                    },
                    {
                        "name": "release_date_end",
                        "type": "NUMBER",
                        "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
                        "default": "20201211"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "titles": "empty list",
                    "page": "int",
                    "total_results": "int",
                    "total_pages": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Streaming Sources",
                "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source_id": "int",
                    "name": "str",
                    "type": "str",
                    "region": "str",
                    "ios_url": "str",
                    "android_url": "str",
                    "web_url": "str",
                    "format": "str",
                    "price": "float",
                    "seasons": "NoneType",
                    "episodes": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            }
        ],
        "query": "I want to explore the world of independent cinema. Can you give me a list of independent movies available on streaming platforms in the US? Additionally, provide me with the streaming availability details for the movie 'Moonlight' and the basic information about the cast, including their names and professions.",
        "relevant APIs": [
            [
                "Watchmode",
                "List Titles"
            ],
            [
                "Watchmode",
                "Title Streaming Sources"
            ],
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Streaming Availability",
                "Get Ultra"
            ]
        ],
        "query_id": 13780,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            }
        ],
        "query": "I want to share an interesting article with my friends on social media, but the URL is too long. Can you help me shorten the URL using the bitly API? The long URL is 'https://example.com/article/12345'. Additionally, I would like to create a new link using the URL Link Shortener API with the destination set to 'https://example.com/article/12345'.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ]
        ],
        "query_id": 14485,
        "Tool_dic": [
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            },
            {
                "ID": "165",
                "Description": "Shortens urls"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "My company is launching a new product and we need to create custom short links for our marketing materials. Can you assist us in generating short links for our product pages and provide us with a list of available domains for branding? Additionally, we would like to gather some data on the click-through rates of different URL shorteners.",
        "relevant APIs": [
            [
                "URL Link Shortener",
                "Create a new link"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ],
            [
                "bitly",
                "shorten"
            ]
        ],
        "query_id": 14489,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedTags",
                "api_description": "Get a list of related tags for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The Name of category",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I want to create a playlist of my favorite music videos from YouTube. Get the related tags for the 'Music' category from Vimeo to enhance the playlist. Also, provide me with information about the 'Music' category from Vimeo.",
        "relevant APIs": [
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ],
            [
                "Vimeo",
                "GetRelatedTags"
            ],
            [
                "Vimeo",
                "GetCategoryInfo"
            ]
        ],
        "query_id": 14938,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedTags",
                "api_description": "Get a list of related tags for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The Name of category",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelInfo",
                "api_description": "Get the information on a single channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need to download a video from YouTube to include in my presentation. Provide me with the download link and the video's title, length, and description. Also, find the related tags for the 'Education' category from Vimeo to enhance my presentation.",
        "relevant APIs": [
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ],
            [
                "Vimeo",
                "GetRelatedTags"
            ],
            [
                "Vimeo",
                "GetCategoryInfo"
            ]
        ],
        "query_id": 14939,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "My company is organizing a virtual conference and we would like to feature some videos from Vimeo. Can you help us find videos related to a specific category? It would be great if you could provide the full video information and the related people in the industry. Also, is it possible to download or stream these videos using a specific tool? Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 14947,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm interested in exploring the world of filmmaking. Can you recommend some channels on Vimeo that focus on different categories? It would be great if you could provide the full video information and the related people in the industry. Also, is it possible to download or stream these videos using a specific tool? Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllChannels"
            ],
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 14948,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedPeople",
                "api_description": "Get a list of related people for a category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "generated_in": "str",
                    "stat": "str",
                    "err": {
                        "code": "str",
                        "expl": "str",
                        "msg": "str"
                    }
                }
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetAllChannels",
                "api_description": "Get a list of all public channels.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "STRING",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
                        "default": "most_recently_updated"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            }
        ],
        "query": "I'm a film student and I'm looking for some educational resources. Can you recommend some channels on Vimeo that provide tutorials and insights into different categories of filmmaking? It would be great if you could provide the full video information and the related people in the industry. Also, is it possible to download or stream these videos using a specific tool? Thank you!",
        "relevant APIs": [
            [
                "Vimeo",
                "GetAllChannels"
            ],
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "Vimeo",
                "GetRelatedPeople"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 14950,
        "Tool_dic": [
            {
                "ID": "195",
                "Description": "Vimeo API"
            },
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Sources",
                "api_description": "Get a listing of titles that have changed to their streaming sources within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass in the 2 character region code (eg US) for the country you want to get titles with changed sources from. There is a limit to 1 region on this endpoint, if you leave this field blank US changes will be returned only.",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Person",
                "api_description": "Return details on a specific person (actor, director, etc).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7110004"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "full_name": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "main_profession": "str",
                    "secondary_profession": "str",
                    "tertiary_profession": "str",
                    "date_of_birth": "str",
                    "date_of_death": "NoneType",
                    "place_of_birth": "str",
                    "gender": "str",
                    "headshot_url": "str",
                    "known_for": [
                        "list of int with length 4"
                    ],
                    "relevance_percentile": "int"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Basic (FREE)",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
                        "default": "18"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I need information about a specific person. Can you provide me with details on the actor with the ID '7110004'? I want to know their full name, date of birth, place of birth, and main profession. Additionally, fetch the basic information about the cast member with the ID 'nm0000375' to learn more about their profession and known titles.",
        "relevant APIs": [
            [
                "Watchmode",
                "Person"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 16184,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Person",
                "api_description": "Return details on a specific person (actor, director, etc).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7110004"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "full_name": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "main_profession": "str",
                    "secondary_profession": "str",
                    "tertiary_profession": "str",
                    "date_of_birth": "str",
                    "date_of_death": "NoneType",
                    "place_of_birth": "str",
                    "gender": "str",
                    "headshot_url": "str",
                    "known_for": [
                        "list of int with length 4"
                    ],
                    "relevance_percentile": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I need to find a new TV show to watch with my family. Can you suggest a family-friendly series with a high IMDb rating and check its streaming availability on Netflix, Disney+, and Apple TV? Additionally, provide information about the show's cast and crew.",
        "relevant APIs": [
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Streaming Availability",
                "Search Pro"
            ],
            [
                "Watchmode",
                "Title Cast & Crew"
            ]
        ],
        "query_id": 18978,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Person",
                "api_description": "Return details on a specific person (actor, director, etc).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7110004"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "full_name": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "main_profession": "str",
                    "secondary_profession": "str",
                    "tertiary_profession": "str",
                    "date_of_birth": "str",
                    "date_of_death": "NoneType",
                    "place_of_birth": "str",
                    "gender": "str",
                    "headshot_url": "str",
                    "known_for": [
                        "list of int with length 4"
                    ],
                    "relevance_percentile": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "My company is organizing a movie night for employees. Can you recommend a popular movie that suits different tastes and check its streaming availability on Netflix, Hulu, and Prime Video? Additionally, provide details about the movie's cast and crew.",
        "relevant APIs": [
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Streaming Availability",
                "Search Pro"
            ],
            [
                "Watchmode",
                "Title Cast & Crew"
            ]
        ],
        "query_id": 18979,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Person",
                "api_description": "Return details on a specific person (actor, director, etc).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7110004"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "full_name": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "main_profession": "str",
                    "secondary_profession": "str",
                    "tertiary_profession": "str",
                    "date_of_birth": "str",
                    "date_of_death": "NoneType",
                    "place_of_birth": "str",
                    "gender": "str",
                    "headshot_url": "str",
                    "known_for": [
                        "list of int with length 4"
                    ],
                    "relevance_percentile": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm planning a movie marathon with my friends. Find me a series of movies from a specific genre and check their streaming availability on Netflix, Hulu, and Prime Video. Also, provide information about the cast and crew of each movie.",
        "relevant APIs": [
            [
                "OTT details",
                "Title Details"
            ],
            [
                "Streaming Availability",
                "Search Pro"
            ],
            [
                "Watchmode",
                "Title Cast & Crew"
            ]
        ],
        "query_id": 18980,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Basic (FREE)",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Person",
                "api_description": "Return details on a specific person (actor, director, etc).",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7110004"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "full_name": "str",
                    "first_name": "str",
                    "last_name": "str",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "main_profession": "str",
                    "secondary_profession": "str",
                    "tertiary_profession": "str",
                    "date_of_birth": "str",
                    "date_of_death": "NoneType",
                    "place_of_birth": "str",
                    "gender": "str",
                    "headshot_url": "str",
                    "known_for": [
                        "list of int with length 4"
                    ],
                    "relevance_percentile": "int"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Cast & Crew",
                "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "person_id": "int",
                    "type": "str",
                    "full_name": "str",
                    "headshot_url": "str",
                    "role": "str",
                    "episode_count": "int",
                    "order": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Streaming Release Dates",
                "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220301"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many release dates to return, default is 500.",
                        "default": "250"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": "20220312"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm curious about a famous actor's career. Can you provide details about their filmography, including their best-known titles and streaming availability on Netflix, Hulu, and Prime Video? Also, share some interesting facts about the actor.",
        "relevant APIs": [
            [
                "Watchmode",
                "Person"
            ],
            [
                "Streaming Availability",
                "Search Pro"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 18982,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm planning a movie night with my friends and we want to watch a comedy film. Can you recommend some popular comedy movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18984,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm a movie enthusiast and I'm interested in watching critically acclaimed films. Can you suggest some award-winning movies with high IMDb ratings? Also, provide the streaming platforms where these movies are available in the US.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18987,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm planning a movie night with my friends and we want to watch a horror film. Can you recommend some popular horror movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18988,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I want to watch a romantic comedy movie with my partner. Can you recommend some popular romantic comedy films available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18990,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm a history buff and I'm interested in watching historical films. Can you recommend some acclaimed historical movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18992,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Services (FREE)",
                "api_description": "Get the list of supported services and details about them",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Details",
                "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
                        "default": "ES"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "original_title": "str",
                    "plot_overview": "str",
                    "type": "str",
                    "runtime_minutes": "NoneType",
                    "year": "int",
                    "end_year": "int",
                    "release_date": "str",
                    "imdb_id": "str",
                    "tmdb_id": "int",
                    "tmdb_type": "str",
                    "genres": [
                        "list of int with length 3"
                    ],
                    "genre_names": [
                        "list of str with length 3"
                    ],
                    "user_rating": "float",
                    "critic_score": "int",
                    "us_rating": "str",
                    "poster": "str",
                    "backdrop": "str",
                    "original_language": "str",
                    "english_title": "str",
                    "similar_titles": [
                        "list of int with length 25"
                    ],
                    "networks": [
                        "list of int with length 1"
                    ],
                    "network_names": [
                        "list of str with length 1"
                    ],
                    "relevance_percentile": "float",
                    "trailer": "str",
                    "trailer_thumbnail": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Additional Title Details",
                "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt7286456"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imdbid": "str",
                    "title": "str",
                    "people": [
                        {
                            "peopleid": "str",
                            "characters": "NoneType",
                            "category": "str",
                            "job": "str",
                            "_list_length": 10
                        }
                    ],
                    "numVotes": "int",
                    "trailerUrl": [
                        "list of str with length 3"
                    ],
                    "plotSummary": "str",
                    "quotes": [
                        "list of str with length 5"
                    ],
                    "reviews": [
                        "list of str with length 5"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I'm organizing a movie night for my company's team-building event. Can you suggest some motivational movies with positive messages? Also, provide the streaming platforms where these movies are available in the US.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Ultra"
            ],
            [
                "Watchmode",
                "Title Details"
            ],
            [
                "OTT details",
                "Title Details"
            ]
        ],
        "query_id": 18993,
        "Tool_dic": [
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Episodes",
                "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "episode_number": "int",
                    "season_number": "int",
                    "season_id": "int",
                    "tmdb_id": "int",
                    "imdb_id": "str",
                    "thumbnail_url": "str",
                    "release_date": "str",
                    "runtime_minutes": "int",
                    "overview": "str",
                    "sources": [
                        {
                            "source_id": "int",
                            "name": "str",
                            "type": "str",
                            "region": "str",
                            "ios_url": "str",
                            "android_url": "str",
                            "web_url": "str",
                            "format": "str",
                            "price": "NoneType",
                            "_list_length": 7
                        }
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Regions",
                "api_description": "Return a listing of all regions (countries) that Watchmode currently supports and their 2 letter country codes used in the return data of other endpoints.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "name": "str",
                    "flag": "str",
                    "data_tier": "int",
                    "plan_enabled": "bool"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "New Arrivals",
                "api_description": "Get the latest arrivals from different platforms .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
                        "default": "US"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": "empty list"
                }
            }
        ],
        "query": "I'm a film enthusiast and I want to explore movies from different regions. Can you recommend some movies from India and the United States? Additionally, I would like to search for movies and TV shows related to 'The Godfather' using the 'search' endpoint.",
        "relevant APIs": [
            [
                "Watchmode",
                "Autocomplete Search"
            ],
            [
                "OTT details",
                "Search"
            ]
        ],
        "query_id": 19272,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I want to explore new movies and TV series added to Watchmode recently. Can you provide me with a list of new titles added between June 1, 2022, and June 30, 2022? Additionally, fetch the basic information about the cast member with the peopleid 'nm0000375'.",
        "relevant APIs": [
            [
                "Watchmode",
                "New Titles"
            ],
            [
                "OTT details",
                "Basic Info"
            ]
        ],
        "query_id": 19274,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "My family and I are planning a movie marathon and we need some movie recommendations. Could you search for movies based on the genre 'action' and language 'Spanish'? Also, provide us with the streaming sources available in the US and Canada where we can watch these movies.",
        "relevant APIs": [
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Params"
            ],
            [
                "Watchmode",
                "Sources"
            ]
        ],
        "query_id": 19275,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm planning a movie-themed birthday party for my niece and I need some suggestions for movies suitable for kids. Can you search for movies based on the genre 'animation' and language 'English'? Also, provide the streaming sources available in the US and Canada where we can watch these movies.",
        "relevant APIs": [
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Params"
            ],
            [
                "Watchmode",
                "Sources"
            ]
        ],
        "query_id": 19277,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm organizing a movie-themed event for my company and I need some information about the cast member with the peopleid 'nm0000375'. Can you fetch the name, profession, birth year, and best titles associated with this cast member? Also, provide the streaming sources available in the US and Canada for these titles.",
        "relevant APIs": [
            [
                "OTT details",
                "Basic Info"
            ],
            [
                "Watchmode",
                "Sources"
            ]
        ],
        "query_id": 19281,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Params",
                "api_description": "Get array of values that can be used as params in Advanced Search .",
                "required_parameters": [
                    {
                        "name": "param",
                        "type": "STRING",
                        "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
                        "default": "genre"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Sources",
                "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "regions",
                        "type": "STRING",
                        "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
                        "default": "US,CA"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
                        "default": "sub,free"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "type": "str",
                    "logo_100px": "str",
                    "ios_appstore_url": "str",
                    "android_playstore_url": "str",
                    "android_scheme": "str",
                    "ios_scheme": "str",
                    "regions": [
                        "list of str with length 51"
                    ]
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New Titles",
                "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
                        "default": "movie,tv_series"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            }
        ],
        "query": "I'm planning a movie night with my family and we want to watch some horror movies. Can you search for movies based on the genre 'horror' and language 'English'? Also, provide the streaming sources available in the US and Canada where we can watch these movies.",
        "relevant APIs": [
            [
                "OTT details",
                "Search"
            ],
            [
                "OTT details",
                "Params"
            ],
            [
                "Watchmode",
                "Sources"
            ]
        ],
        "query_id": 19282,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise party for my best friend's birthday. Can you help me create a short URL for the party invitation and find a suitable domain for it? Also, provide me with a list of available domains to choose from.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20022,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need to share a long URL with my colleagues. Can you generate a shortened URL for me using the bitly API? Additionally, find a domain that best represents our company and create a new link with that domain.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Create a new link"
            ]
        ],
        "query_id": 20023,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to share a blog post with my followers on social media. Can you generate a shortened URL for the post using the bitly API? Additionally, find an appropriate domain for the link.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20024,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a vacation with my family and want to share the itinerary with them. Can you generate a shortened URL for the itinerary using the bitly API? Also, find a domain that suits our travel theme.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20026,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a workshop and need to send out the event details. Can you help me create a short URL for the event using the bitly API? Additionally, suggest a domain that reflects the purpose of the workshop.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20027,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a surprise anniversary party for my parents. Can you generate a shortened URL for the party invitation using the bitly API? Additionally, find a domain that represents love and celebration.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20028,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm organizing a meetup for a group of entrepreneurs. Can you help me create a short URL for the meetup details using the bitly API? Also, suggest a domain that resonates with the entrepreneurial spirit.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20029,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "bitly",
                "api_name": "shorten",
                "api_description": "Given a long URL, returns a bitly short URL.",
                "required_parameters": [
                    {
                        "name": "longUrl",
                        "type": "STRING",
                        "description": "a long URL to be shortened (example: http://betaworks.com/).",
                        "default": "http://www.mashape.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status_code": "int",
                    "status_txt": "str",
                    "data": "empty list"
                }
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Get a list of domains",
                "api_description": "Get a list of domains",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "active",
                        "type": "BOOLEAN",
                        "description": "Filter branded domains depending on whether they can be used to brand short links or not",
                        "default": ""
                    },
                    {
                        "name": "orderBy",
                        "type": "STRING",
                        "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
                        "default": "createdAt"
                    },
                    {
                        "name": "last",
                        "type": "STRING",
                        "description": "The id of the last domain you fetched, see Infinite Scrolling section",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "How many branded domains to load",
                        "default": "100"
                    },
                    {
                        "name": "orderDir",
                        "type": "STRING",
                        "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
                        "default": "desc"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Advertising",
                "tool_name": "URL Link Shortener",
                "api_name": "Create a new link",
                "api_description": "Create a new link",
                "required_parameters": [
                    {
                        "name": "destination",
                        "type": "STRING",
                        "description": "The destination URL you want your branded short link to point to",
                        "default": "https://rapidapi.com/"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "domain[id]",
                        "type": "STRING",
                        "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
                        "default": ""
                    },
                    {
                        "name": "slashtag",
                        "type": "STRING",
                        "description": "The keyword portion of your branded short link",
                        "default": ""
                    },
                    {
                        "name": "domain[fullName]",
                        "type": "STRING",
                        "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to share a news article with my colleagues. Can you generate a shortened URL for the article using the bitly API? Additionally, find a domain that suits our company's industry.",
        "relevant APIs": [
            [
                "bitly",
                "shorten"
            ],
            [
                "URL Link Shortener",
                "Get a list of domains"
            ]
        ],
        "query_id": 20030,
        "Tool_dic": [
            {
                "ID": "165",
                "Description": "Shortens urls"
            },
            {
                "ID": "219",
                "Description": "API for custom short URLs"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "",
                        "default": "Endgame"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "*Maximum number of pages returned is 10 ",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Advanced Search",
                "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start_year",
                        "type": "NUMBER",
                        "description": "Enter any year between 1970 to 2020 to get results.",
                        "default": "1970"
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1"
                    },
                    {
                        "name": "max_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "7.8"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Enter type 'movie' or 'show'",
                        "default": "movie"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
                        "default": "latest"
                    },
                    {
                        "name": "min_imdb",
                        "type": "NUMBER",
                        "description": "",
                        "default": "6"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple genre eg : action,horror",
                        "default": "action"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "use comma seperated values to enter multiple values , eg : english,german",
                        "default": "english"
                    },
                    {
                        "name": "end_year",
                        "type": "NUMBER",
                        "description": "Enter any year from 1970 to 2020 to  get results.",
                        "default": "2020"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "results": [
                        {
                            "imageurl": [
                                "list of str with length 1"
                            ],
                            "genre": [
                                "list of str with length 3"
                            ],
                            "imdbid": "str",
                            "title": "str",
                            "imdbrating": "float",
                            "released": "int",
                            "synopsis": "str",
                            "type": "str",
                            "_list_length": 50
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Genres (FREE)",
                "api_description": "Get the id to name mapping of supported genres.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "1": "str",
                        "10402": "str",
                        "10749": "str",
                        "10751": "str",
                        "10752": "str",
                        "10763": "str",
                        "10764": "str",
                        "10767": "str",
                        "12": "str",
                        "14": "str",
                        "16": "str",
                        "18": "str",
                        "2": "str",
                        "27": "str",
                        "28": "str",
                        "3": "str",
                        "35": "str",
                        "36": "str",
                        "37": "str",
                        "4": "str",
                        "5": "str",
                        "53": "str",
                        "6": "str",
                        "7": "str",
                        "80": "str",
                        "878": "str",
                        "9648": "str",
                        "99": "str"
                    }
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search By Title (FREE)",
                "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
                "required_parameters": [
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Title to search for.",
                        "default": "batman"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Basic (FREE)",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genre",
                        "type": "STRING",
                        "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
                        "default": "18"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Title Seasons",
                "api_description": "Return all of the seasons for a TV show or mini-series.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
                        "default": "3173903"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "poster_url": "str",
                    "name": "str",
                    "overview": "NoneType",
                    "number": "NoneType",
                    "air_date": "str",
                    "episode_count": "NoneType"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "New People",
                "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "1"
                    },
                    {
                        "name": "start_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set how many titles to return per page, default and maximum is 250.",
                        "default": "50"
                    },
                    {
                        "name": "end_date",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Regions",
                "api_description": "Return a listing of all regions (countries) that Watchmode currently supports and their 2 letter country codes used in the return data of other endpoints.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "name": "str",
                    "flag": "str",
                    "data_tier": "int",
                    "plan_enabled": "bool"
                }
            }
        ],
        "query": "I'm trying to find a new series to watch. Can you recommend some popular TV shows that are currently streaming on platforms like Netflix, Prime Video, and Hulu? Additionally, provide me with the seasons of the TV show 'Friends'.",
        "relevant APIs": [
            [
                "Streaming Availability",
                "Search Basic (FREE)"
            ],
            [
                "Streaming Availability",
                "Search By Title (FREE)"
            ],
            [
                "Watchmode",
                "New People"
            ],
            [
                "Watchmode",
                "Title Seasons"
            ]
        ],
        "query_id": 21682,
        "Tool_dic": [
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I want to plan a movie night with my friends. Can you suggest some popular movies from the 'action' category on Vimeo? Also, provide me with the download/stream information for one of the movies.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 23236,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm a filmmaker looking for inspiration. Can you recommend some award-winning short films from Vimeo? Also, provide me with the download/stream information for one of the films.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 23239,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Tools",
                "tool_name": "YTStream - Download YouTube Videos",
                "api_name": "Download/Stream",
                "api_description": "Stream or download info.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Youtube Video Id.",
                        "default": "UxxajLWwzqY"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "cgeo",
                        "type": "STRING",
                        "description": "Country code in ISO 3166 format of the end user.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetCategoryInfo",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The name of the category.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetRelatedChannels",
                "api_description": "",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Category name",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json or xml or php",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "Number of items to show on each page. Max 50.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Media",
                "tool_name": "Vimeo",
                "api_name": "GetChannelVideos",
                "api_description": "Get a list of the videos in a channel.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "json/xml/php",
                        "default": ""
                    },
                    {
                        "name": "channel_id",
                        "type": "STRING",
                        "description": "The numeric id of the channel or its url name.",
                        "default": ""
                    },
                    {
                        "name": "full_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back the full video information",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The ID number or username of the user. A token may be used instead.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "The page number to show.",
                        "default": ""
                    },
                    {
                        "name": "per_page",
                        "type": "NUMBER",
                        "description": "",
                        "default": "Number of items to show on each page. Max 50."
                    },
                    {
                        "name": "summary_response",
                        "type": "BOOLEAN",
                        "description": "Set this parameter to get back more information.",
                        "default": ""
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning to start a YouTube channel and I need some ideas. Can you suggest popular video categories on Vimeo? Also, provide me with the download/stream information for a video in the 'comedy' category.",
        "relevant APIs": [
            [
                "Vimeo",
                "GetCategoryInfo"
            ],
            [
                "Vimeo",
                "GetChannelVideos"
            ],
            [
                "YTStream - Download YouTube Videos",
                "Download/Stream"
            ]
        ],
        "query_id": 23240,
        "Tool_dic": [
            {
                "ID": "66",
                "Description": "Download or stream YouTube Videos/MP4."
            },
            {
                "ID": "195",
                "Description": "Vimeo API"
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "query": "I'm planning a movie night with my friends this weekend. Can you suggest some popular movies released in the last year? Also, provide the streaming availability for these movies on different platforms like Netflix, Prime Video, and Hulu.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ]
        ],
        "query_id": 25160,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "query": "I'm planning a vacation with my family and we want to watch some movies during the trip. Can you recommend some family-friendly movies and provide the streaming availability on platforms like Disney+ and Netflix? Also, suggest some snacks that go well with movie nights.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ]
        ],
        "query_id": 25161,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "query": "I'm planning a romantic date night with my partner and I want to watch a romantic movie. Can you suggest some romantic movies and provide the streaming availability on platforms like Netflix and Prime Video? Also, suggest some romantic dinner recipes.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ]
        ],
        "query_id": 25163,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "query": "I'm planning a road trip with my family and we want to listen to some great music along the way. Can you recommend some popular songs and provide the streaming availability on platforms like Spotify and Apple Music? Also, suggest some snacks for the road trip.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ]
        ],
        "query_id": 25164,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    },
    {
        "api_list": [
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Titles with Changed Episodes",
                "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "NUMBER",
                        "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
                        "default": "50"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "statusCode": "int",
                    "statusMessage": "str"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Search",
                "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
                "required_parameters": [
                    {
                        "name": "search_field",
                        "type": "STRING",
                        "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
                        "default": "name"
                    },
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "types",
                        "type": "STRING",
                        "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
                        "default": "tv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title_results": [
                        {
                            "resultType": "str",
                            "id": "int",
                            "name": "str",
                            "type": "str",
                            "year": "int",
                            "imdb_id": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "_list_length": 3
                        }
                    ],
                    "people_results": "empty list"
                }
            },
            {
                "category_name": "Entertainment",
                "tool_name": "Watchmode",
                "api_name": "Autocomplete Search",
                "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
                "required_parameters": [
                    {
                        "name": "search_value",
                        "type": "STRING",
                        "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
                        "default": "Breaking Bad"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "search_type",
                        "type": "NUMBER",
                        "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "relevance": "float",
                            "type": "str",
                            "id": "int",
                            "year": "int",
                            "result_type": "str",
                            "tmdb_id": "int",
                            "tmdb_type": "str",
                            "image_url": "str",
                            "_list_length": 9
                        }
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Get Ultra",
                "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "tmdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": ""
                    },
                    {
                        "name": "imdb_id",
                        "type": "STRING",
                        "description": "",
                        "default": "tt1877830"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Pro",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    },
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": "zombie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "Streaming Availability",
                "api_name": "Search Ultra",
                "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
                "required_parameters": [
                    {
                        "name": "services",
                        "type": "STRING",
                        "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
                        "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
                    },
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
                        "default": "us"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "1000000"
                    },
                    {
                        "name": "order_by",
                        "type": "STRING",
                        "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
                        "default": "year"
                    },
                    {
                        "name": "max_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "90"
                    },
                    {
                        "name": "min_imdb_rating",
                        "type": "NUMBER",
                        "description": "Out of 100",
                        "default": "70"
                    },
                    {
                        "name": "desc",
                        "type": "BOOLEAN",
                        "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
                        "default": "true"
                    },
                    {
                        "name": "keyword",
                        "type": "STRING",
                        "description": "A keyword to only search within the shows have that keyword in their overview or title.",
                        "default": ""
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
                        "default": ""
                    },
                    {
                        "name": "year_max",
                        "type": "NUMBER",
                        "description": "Maximum release/air year of the show.",
                        "default": "2025"
                    },
                    {
                        "name": "min_imdb_vote_count",
                        "type": "NUMBER",
                        "description": "",
                        "default": "10000"
                    },
                    {
                        "name": "year_min",
                        "type": "NUMBER",
                        "description": "Minimum release/air year of the show.",
                        "default": "2000"
                    },
                    {
                        "name": "show_original_language",
                        "type": "STRING",
                        "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
                        "default": "en"
                    },
                    {
                        "name": "genres_relation",
                        "type": "STRING",
                        "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
                        "default": "or"
                    },
                    {
                        "name": "genres",
                        "type": "STRING",
                        "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
                        "default": "18,80"
                    },
                    {
                        "name": "output_language",
                        "type": "STRING",
                        "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
                        "default": "en"
                    },
                    {
                        "name": "show_type",
                        "type": "STRING",
                        "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
                        "default": "movie"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Basic Info",
                "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
                "required_parameters": [
                    {
                        "name": "peopleid",
                        "type": "STRING",
                        "description": "",
                        "default": "nm0000375"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "peopleid": "str",
                    "name": "str",
                    "profession": [
                        "list of str with length 3"
                    ],
                    "knownForTitles": [
                        "list of str with length 4"
                    ],
                    "birthYear": "str",
                    "deathYear": "str",
                    "bio": "str",
                    "born": "str",
                    "birthName": "str",
                    "poster": [
                        "list of str with length 1"
                    ]
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "OTT Providers",
                "api_description": "Get  information on OTT platforms we suuport .",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
                        "default": "IN"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str"
                }
            },
            {
                "category_name": "Movies",
                "tool_name": "OTT details",
                "api_name": "Title Details",
                "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
                "required_parameters": [
                    {
                        "name": "imdbid",
                        "type": "STRING",
                        "description": "",
                        "default": "tt9904802"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "imageurl": [
                        "list of str with length 1"
                    ],
                    "genre": [
                        "list of str with length 1"
                    ],
                    "imdbid": "str",
                    "title": "str",
                    "runtime": "str",
                    "imdbrating": "float",
                    "released": "int",
                    "synopsis": "str",
                    "type": "str",
                    "language": [
                        "list of str with length 4"
                    ],
                    "streamingAvailability": {
                        "country": {
                            "US": [
                                {
                                    "url": "str",
                                    "platform": "str",
                                    "_list_length": 9
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "query": "I'm planning a hiking trip with my friends and we want to listen to some inspiring podcasts during the journey. Can you recommend some motivational podcasts and provide the streaming availability on platforms like Spotify and Apple Podcasts? Also, suggest some healthy snacks for the hike.",
        "relevant APIs": [
            [
                "Watchmode",
                "Search"
            ],
            [
                "OTT details",
                "Title Details"
            ],
            [
                "OTT details",
                "OTT Providers"
            ]
        ],
        "query_id": 25165,
        "Tool_dic": [
            {
                "ID": "260",
                "Description": "Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)"
            },
            {
                "ID": "97",
                "Description": "Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries"
            },
            {
                "ID": "251",
                "Description": "Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. "
            }
        ]
    }
]
